/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.forms.course;

import BLL.CourseBLL;
import BLL.DTO.OnlineCourse;
import GUI.MainFrame;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khang
 */
public class CourseOnline extends javax.swing.JPanel {

    /**
     * Creates new form Course
     */
    
    CourseBLL courseBLL = new CourseBLL();
    DefaultTableModel model;
    ArrayList<OnlineCourse> list = new ArrayList<OnlineCourse>();
    public CourseOnline() throws SQLException {
        initComponents();
        LoadData();
        button();
    }
    
    public void button(){
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onEdit(int i) {
                int id = Integer.parseInt(jTable1.getModel().getValueAt(i, 0).toString());
                String title = jTable1.getModel().getValueAt(i, 1).toString();
                int credit = Integer.parseInt(jTable1.getModel().getValueAt(i, 2).toString());
                int deid = Integer.parseInt(jTable1.getModel().getValueAt(i, 3).toString());
                String url = jTable1.getModel().getValueAt(i, 4).toString();
                OnlineCourse onlCo = new OnlineCourse(id,title,credit,deid,url);
                EditOnline edit = new EditOnline(new MainFrame(),onlCo);
                edit.setVisible(true);
                courseBLL = new CourseBLL();
                try {
                    LoadData();
                } catch (SQLException ex) {
                    Logger.getLogger(CourseOnline.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void onDelete(int row) {
                
               int id = Integer.parseInt(jTable1.getModel().getValueAt(row, 0).toString());
                try {
                    if(courseBLL.delete(id)==1){
                        JOptionPane.showMessageDialog(jPanel1, "Success");
                    }else
                        JOptionPane.showMessageDialog(jPanel1, "Fail");
                } catch (SQLException ex) {
                    Logger.getLogger(CourseOnline.class.getName()).log(Level.SEVERE, null, ex);
                }
                courseBLL = new CourseBLL();
                try {
                    LoadData();
                } catch (SQLException ex) {
                    Logger.getLogger(CourseOnline.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void onView(int row) {
                 System.out.println("View");
            }
        };
        jTable1.getColumnModel().getColumn(5).setCellRenderer(new TableActionCellRender());
        jTable1.getColumnModel().getColumn(5).setCellEditor(new TableActionCellEditor(event));
        
    }
    
    public void LoadData() throws SQLException {
        model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        list = courseBLL.getOnlineCourses();

        for (OnlineCourse on : list) {
            model.addRow(new Object[] {
                      on.getCourseID(),on.getTitle(),on.getCredits(),on.getDepartmentId(),on.getUrl()
                });
                jTable1.setModel(model);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtfFind = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Title ", "Credits", "Department ID", "URL", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(40);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(5).setMinWidth(160);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(160);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(160);
        }

        jtfFind.setBorder(javax.swing.BorderFactory.createTitledBorder("Find:"));

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfFind, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFind)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            list = courseBLL.findCourseOnline(jtfFind.getText());
        } catch (SQLException ex) {
            Logger.getLogger(CourseOnsite.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (OnlineCourse on : list) {
           model.addRow(new Object[] {
                      on.getCourseID(),on.getTitle(),on.getCredits(),on.getDepartmentId(),on.getUrl()
                });
                jTable1.setModel(model);
        }

    }//GEN-LAST:event_btnFindActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtfFind;
    // End of variables declaration//GEN-END:variables
}
